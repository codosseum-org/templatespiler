-- File generated by the BNF Converter (bnfc 2.9.4.1).
{-# LANGUAGE GeneralizedNewtypeDeriving #-}

-- | The abstract syntax of language templatespiler.
module Templ.Templatespiler.Abs where

import Data.String qualified
import Prelude (Integer, String)
import Prelude qualified as C (Eq, Ord, Read, Show)

import Data.Text qualified

data Type
  = IntegerType
  | StringType
  | FloatType
  | CombinatorType Combinator
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data TerminalBinding
  = SingleBinding Ident Type
  | ParenBinding TerminalBinding
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data BindingGroup = BindingGroup [TerminalBinding]
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data BindingOrCombinator
  = NamedBinding TerminalBinding
  | UnnamedBinding Combinator
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Combinator
  = ParenCombinator Combinator
  | ArrayCombinator VarOrConstInt BindingOrCombinator
  | SepByCombinator String BindingGroup
  | ListCombinator BindingOrCombinator
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data VarOrConstInt = ConstInt Integer | ConstVar Ident
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data BindingList = BindingList [BindingListEntry]
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data BindingListEntry = BindingListEntry TerminalBinding
  deriving (C.Eq, C.Ord, C.Show, C.Read)

newtype Ident = Ident Data.Text.Text
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)
