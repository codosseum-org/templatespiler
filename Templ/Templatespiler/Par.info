-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Templ/Templatespiler/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pBindingList -> BindingList                 (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Type -> 'Integer'                                  (4)
	Type -> 'String'                                   (5)
	Type -> 'Float'                                    (6)
	Type -> Combinator                                 (7)
	TerminalBinding -> Ident ':' Type                  (8)
	TerminalBinding -> '(' TerminalBinding ')'         (9)
	BindingGroup -> '[' ListTerminalBinding ']'        (10)
	ListTerminalBinding ->                             (11)
	ListTerminalBinding -> TerminalBinding             (12)
	ListTerminalBinding -> TerminalBinding ',' ListTerminalBinding   (13)
	BindingOrCombinator -> TerminalBinding             (14)
	BindingOrCombinator -> Combinator                  (15)
	Combinator -> '(' Combinator ')'                   (16)
	Combinator -> 'array' VarOrConstInt BindingOrCombinator   (17)
	Combinator -> 'sep-by' String BindingGroup         (18)
	Combinator -> 'list' BindingOrCombinator           (19)
	VarOrConstInt -> Integer                           (20)
	VarOrConstInt -> Ident                             (21)
	BindingList -> ListBindingListEntry                (22)
	BindingListEntry -> TerminalBinding                (23)
	ListBindingListEntry ->                            (24)
	ListBindingListEntry -> BindingListEntry ListBindingListEntry   (25)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	','            { PT _ (TS _ 3) }
	':'            { PT _ (TS _ 4) }
	'Float'        { PT _ (TS _ 5) }
	'Integer'      { PT _ (TS _ 6) }
	'String'       { PT _ (TS _ 7) }
	'['            { PT _ (TS _ 8) }
	']'            { PT _ (TS _ 9) }
	'array'        { PT _ (TS _ 10) }
	'list'         { PT _ (TS _ 11) }
	'sep-by'       { PT _ (TS _ 12) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pBindingList rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Type            rules 4, 5, 6, 7
	TerminalBinding rules 8, 9
	BindingGroup    rule  10
	ListTerminalBinding rules 11, 12, 13
	BindingOrCombinator rules 14, 15
	Combinator      rules 16, 17, 18, 19
	VarOrConstInt   rules 20, 21
	BindingList     rule  22
	BindingListEntry rule  23
	ListBindingListEntry rules 24, 25

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pBindingList -> . BindingList                (rule 0)

	'('            shift, and enter state 8
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 24

	Ident          goto state 3
	TerminalBindinggoto state 4
	BindingList    goto state 5
	BindingListEntrygoto state 6
	ListBindingListEntrygoto state 7

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'('            reduce using rule 1
	':'            reduce using rule 1
	'array'        reduce using rule 1
	'list'         reduce using rule 1
	'sep-by'       reduce using rule 1
	L_Ident        reduce using rule 1


State 3

	TerminalBinding -> Ident . ':' Type                 (rule 8)

	':'            shift, and enter state 11


State 4

	BindingListEntry -> TerminalBinding .               (rule 23)

	'('            reduce using rule 23
	L_Ident        reduce using rule 23
	%eof           reduce using rule 23


State 5

	%start_pBindingList -> BindingList .                (rule 0)

	%eof           accept


State 6

	ListBindingListEntry -> BindingListEntry . ListBindingListEntry    (rule 25)

	'('            shift, and enter state 8
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 24

	Ident          goto state 3
	TerminalBindinggoto state 4
	BindingListEntrygoto state 6
	ListBindingListEntrygoto state 10

State 7

	BindingList -> ListBindingListEntry .               (rule 22)

	%eof           reduce using rule 22


State 8

	TerminalBinding -> '(' . TerminalBinding ')'        (rule 9)

	'('            shift, and enter state 8
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	TerminalBindinggoto state 9

State 9

	TerminalBinding -> '(' TerminalBinding . ')'        (rule 9)

	')'            shift, and enter state 21


State 10

	ListBindingListEntry -> BindingListEntry ListBindingListEntry .    (rule 25)

	%eof           reduce using rule 25


State 11

	TerminalBinding -> Ident ':' . Type                 (rule 8)

	'('            shift, and enter state 14
	'Float'        shift, and enter state 15
	'Integer'      shift, and enter state 16
	'String'       shift, and enter state 17
	'array'        shift, and enter state 18
	'list'         shift, and enter state 19
	'sep-by'       shift, and enter state 20

	Type           goto state 12
	Combinator     goto state 13

State 12

	TerminalBinding -> Ident ':' Type .                 (rule 8)

	'('            reduce using rule 8
	')'            reduce using rule 8
	','            reduce using rule 8
	']'            reduce using rule 8
	L_Ident        reduce using rule 8
	%eof           reduce using rule 8


State 13

	Type -> Combinator .                                (rule 7)

	'('            reduce using rule 7
	')'            reduce using rule 7
	','            reduce using rule 7
	']'            reduce using rule 7
	L_Ident        reduce using rule 7
	%eof           reduce using rule 7


State 14

	Combinator -> '(' . Combinator ')'                  (rule 16)

	'('            shift, and enter state 14
	'array'        shift, and enter state 18
	'list'         shift, and enter state 19
	'sep-by'       shift, and enter state 20

	Combinator     goto state 32

State 15

	Type -> 'Float' .                                   (rule 6)

	'('            reduce using rule 6
	')'            reduce using rule 6
	','            reduce using rule 6
	']'            reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 16

	Type -> 'Integer' .                                 (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	','            reduce using rule 4
	']'            reduce using rule 4
	L_Ident        reduce using rule 4
	%eof           reduce using rule 4


State 17

	Type -> 'String' .                                  (rule 5)

	'('            reduce using rule 5
	')'            reduce using rule 5
	','            reduce using rule 5
	']'            reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 18

	Combinator -> 'array' . VarOrConstInt BindingOrCombinator    (rule 17)

	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31

	Ident          goto state 28
	Integer        goto state 29
	VarOrConstInt  goto state 30

State 19

	Combinator -> 'list' . BindingOrCombinator          (rule 19)

	'('            shift, and enter state 27
	'array'        shift, and enter state 18
	'list'         shift, and enter state 19
	'sep-by'       shift, and enter state 20
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	TerminalBindinggoto state 24
	BindingOrCombinatorgoto state 25
	Combinator     goto state 26

State 20

	Combinator -> 'sep-by' . String BindingGroup        (rule 18)

	L_quoted       shift, and enter state 23

	String         goto state 22

State 21

	TerminalBinding -> '(' TerminalBinding ')' .        (rule 9)

	'('            reduce using rule 9
	')'            reduce using rule 9
	','            reduce using rule 9
	']'            reduce using rule 9
	L_Ident        reduce using rule 9
	%eof           reduce using rule 9


State 22

	Combinator -> 'sep-by' String . BindingGroup        (rule 18)

	'['            shift, and enter state 36

	BindingGroup   goto state 35

State 23

	String -> L_quoted .                                (rule 3)

	'['            reduce using rule 3


State 24

	BindingOrCombinator -> TerminalBinding .            (rule 14)

	'('            reduce using rule 14
	')'            reduce using rule 14
	','            reduce using rule 14
	']'            reduce using rule 14
	L_Ident        reduce using rule 14
	%eof           reduce using rule 14


State 25

	Combinator -> 'list' BindingOrCombinator .          (rule 19)

	'('            reduce using rule 19
	')'            reduce using rule 19
	','            reduce using rule 19
	']'            reduce using rule 19
	L_Ident        reduce using rule 19
	%eof           reduce using rule 19


State 26

	BindingOrCombinator -> Combinator .                 (rule 15)

	'('            reduce using rule 15
	')'            reduce using rule 15
	','            reduce using rule 15
	']'            reduce using rule 15
	L_Ident        reduce using rule 15
	%eof           reduce using rule 15


State 27

	TerminalBinding -> '(' . TerminalBinding ')'        (rule 9)
	Combinator -> '(' . Combinator ')'                  (rule 16)

	'('            shift, and enter state 27
	'array'        shift, and enter state 18
	'list'         shift, and enter state 19
	'sep-by'       shift, and enter state 20
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	TerminalBindinggoto state 9
	Combinator     goto state 32

State 28

	VarOrConstInt -> Ident .                            (rule 21)

	'('            reduce using rule 21
	'array'        reduce using rule 21
	'list'         reduce using rule 21
	'sep-by'       reduce using rule 21
	L_Ident        reduce using rule 21


State 29

	VarOrConstInt -> Integer .                          (rule 20)

	'('            reduce using rule 20
	'array'        reduce using rule 20
	'list'         reduce using rule 20
	'sep-by'       reduce using rule 20
	L_Ident        reduce using rule 20


State 30

	Combinator -> 'array' VarOrConstInt . BindingOrCombinator    (rule 17)

	'('            shift, and enter state 27
	'array'        shift, and enter state 18
	'list'         shift, and enter state 19
	'sep-by'       shift, and enter state 20
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	TerminalBindinggoto state 24
	BindingOrCombinatorgoto state 34
	Combinator     goto state 26

State 31

	Integer -> L_integ .                                (rule 2)

	'('            reduce using rule 2
	'array'        reduce using rule 2
	'list'         reduce using rule 2
	'sep-by'       reduce using rule 2
	L_Ident        reduce using rule 2


State 32

	Combinator -> '(' Combinator . ')'                  (rule 16)

	')'            shift, and enter state 33


State 33

	Combinator -> '(' Combinator ')' .                  (rule 16)

	'('            reduce using rule 16
	')'            reduce using rule 16
	','            reduce using rule 16
	']'            reduce using rule 16
	L_Ident        reduce using rule 16
	%eof           reduce using rule 16


State 34

	Combinator -> 'array' VarOrConstInt BindingOrCombinator .    (rule 17)

	'('            reduce using rule 17
	')'            reduce using rule 17
	','            reduce using rule 17
	']'            reduce using rule 17
	L_Ident        reduce using rule 17
	%eof           reduce using rule 17


State 35

	Combinator -> 'sep-by' String BindingGroup .        (rule 18)

	'('            reduce using rule 18
	')'            reduce using rule 18
	','            reduce using rule 18
	']'            reduce using rule 18
	L_Ident        reduce using rule 18
	%eof           reduce using rule 18


State 36

	BindingGroup -> '[' . ListTerminalBinding ']'       (rule 10)

	'('            shift, and enter state 8
	']'            reduce using rule 11
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	TerminalBindinggoto state 37
	ListTerminalBindinggoto state 38

State 37

	ListTerminalBinding -> TerminalBinding .            (rule 12)
	ListTerminalBinding -> TerminalBinding . ',' ListTerminalBinding    (rule 13)

	','            shift, and enter state 40
	']'            reduce using rule 12


State 38

	BindingGroup -> '[' ListTerminalBinding . ']'       (rule 10)

	']'            shift, and enter state 39


State 39

	BindingGroup -> '[' ListTerminalBinding ']' .       (rule 10)

	'('            reduce using rule 10
	')'            reduce using rule 10
	','            reduce using rule 10
	']'            reduce using rule 10
	L_Ident        reduce using rule 10
	%eof           reduce using rule 10


State 40

	ListTerminalBinding -> TerminalBinding ',' . ListTerminalBinding    (rule 13)

	'('            shift, and enter state 8
	']'            reduce using rule 11
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	TerminalBindinggoto state 37
	ListTerminalBindinggoto state 41

State 41

	ListTerminalBinding -> TerminalBinding ',' ListTerminalBinding .    (rule 13)

	']'            reduce using rule 13


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 26
Number of terminals: 15
Number of non-terminals: 14
Number of states: 42
