-- File generated by the BNF Converter (bnfc 2.9.4.1).

-- Templates for pattern matching on abstract syntax

{-# OPTIONS_GHC -fno-warn-unused-matches #-}

module Templ.Templatespiler.Skel where

import Prelude (($), Either(..), String, (++), Show, show)
import qualified Templ.Templatespiler.Abs

type Err = Either String
type Result = Err String

failure :: Show a => a -> Result
failure x = Left $ "Undefined case: " ++ show x

transIdent :: Templ.Templatespiler.Abs.Ident -> Result
transIdent x = case x of
  Templ.Templatespiler.Abs.Ident string -> failure x

transType :: Templ.Templatespiler.Abs.Type -> Result
transType x = case x of
  Templ.Templatespiler.Abs.IntegerType -> failure x
  Templ.Templatespiler.Abs.StringType -> failure x
  Templ.Templatespiler.Abs.FloatType -> failure x
  Templ.Templatespiler.Abs.CombinatorType combinator -> failure x

transTerminalBinding :: Templ.Templatespiler.Abs.TerminalBinding -> Result
transTerminalBinding x = case x of
  Templ.Templatespiler.Abs.SingleBinding ident type_ -> failure x
  Templ.Templatespiler.Abs.ParenBinding terminalbinding -> failure x

transBindingGroup :: Templ.Templatespiler.Abs.BindingGroup -> Result
transBindingGroup x = case x of
  Templ.Templatespiler.Abs.BindingGroup terminalbindings -> failure x

transBindingOrCombinator :: Templ.Templatespiler.Abs.BindingOrCombinator -> Result
transBindingOrCombinator x = case x of
  Templ.Templatespiler.Abs.NamedBinding terminalbinding -> failure x
  Templ.Templatespiler.Abs.UnnamedBinding combinator -> failure x

transCombinator :: Templ.Templatespiler.Abs.Combinator -> Result
transCombinator x = case x of
  Templ.Templatespiler.Abs.ParenCombinator combinator -> failure x
  Templ.Templatespiler.Abs.ArrayCombinator varorconstint bindingorcombinator -> failure x
  Templ.Templatespiler.Abs.SepByCombinator string bindinggroup -> failure x
  Templ.Templatespiler.Abs.ListCombinator bindingorcombinator -> failure x

transVarOrConstInt :: Templ.Templatespiler.Abs.VarOrConstInt -> Result
transVarOrConstInt x = case x of
  Templ.Templatespiler.Abs.ConstInt integer -> failure x
  Templ.Templatespiler.Abs.ConstVar ident -> failure x

transBindingList :: Templ.Templatespiler.Abs.BindingList -> Result
transBindingList x = case x of
  Templ.Templatespiler.Abs.BindingList terminalbindings -> failure x

transBindingListEntry :: Templ.Templatespiler.Abs.BindingListEntry -> Result
transBindingListEntry x = case x of
  Templ.Templatespiler.Abs.BindingListEntry terminalbinding -> failure x
