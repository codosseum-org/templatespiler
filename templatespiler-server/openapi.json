{
    "components": {
        "schemas": {
            "CompiledTemplate": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "language": {
                        "$ref": "#/components/schemas/Language"
                    }
                },
                "required": [
                    "language",
                    "code"
                ],
                "type": "object"
            },
            "CompiledTemplateResponse": {
                "properties": {
                    "template": {
                        "$ref": "#/components/schemas/CompiledTemplate"
                    },
                    "warnings": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "warnings",
                    "template"
                ],
                "type": "object"
            },
            "GenerateResponse": {
                "properties": {
                    "inputs": {
                        "items": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "inputs"
                ],
                "type": "object"
            },
            "Language": {
                "enum": [
                    "C",
                    "Python"
                ],
                "type": "string"
            },
            "ParsedTemplate": {
                "format": "uuid",
                "maxLength": 36,
                "minLength": 36,
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
            },
            "TemplateParseRequest": {
                "description": "Submit a template for parsing, returning a unique ID that can be used to process the parsed template in other ways",
                "properties": {
                    "template": {
                        "description": "Content of the template, described using the Templatespiler Language",
                        "example": "a : Integer\n b : list (c : Integer)",
                        "type": "string"
                    },
                    "version": {
                        "description": "Version of the Templatespiler Language that the template is written in. Currently unused.",
                        "type": "string"
                    }
                },
                "required": [
                    "version",
                    "template"
                ],
                "title": "Submit a template for parsing",
                "type": "object"
            }
        }
    },
    "info": {
        "description": "REST API for generating code & inputs from the Templatespiler language",
        "license": {
            "name": "Affero General Public License 3.0 or later"
        },
        "title": "Templatespiler API",
        "version": "0.1.0"
    },
    "openapi": "3.0.0",
    "paths": {
        "/template/compile/{template_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "template_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "language",
                        "required": true,
                        "schema": {
                            "enum": [
                                "C",
                                "Python"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompiledTemplateResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid `language`"
                    },
                    "404": {
                        "description": "`template_id` not found"
                    }
                }
            }
        },
        "/template/generate/{template_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "template_id",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "maxLength": 36,
                            "minLength": 36,
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "amount",
                        "required": true,
                        "schema": {
                            "maximum": 9223372036854775807,
                            "minimum": -9223372036854775808,
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerateResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid `amount`"
                    },
                    "404": {
                        "description": "`template_id` not found"
                    }
                }
            }
        },
        "/template/parse": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json;charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateParseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParsedTemplate"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://templatespiler-codosseum.developerden.org"
        }
    ]
}
